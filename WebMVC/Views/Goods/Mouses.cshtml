@model IEnumerable<MouseViewModel>

@{
    ViewBag.Title = "Mouses";
    Layout = "_Layout";
}

<aside id="filter-sidebar" class="filter-sidebar">
    <form id="filter-form" class="filter-list" asp-action="Mouses" asp-controller="Goods" method="get">
        <label class="filter-category-name">BRAND</label>
        @foreach (var manufacturer in ViewBag.Manufacturers)
        {
            <div class="filter-option-group">
                <input type="checkbox" value="@manufacturer" name="manufacturers" checked="@Context.Request.Query["manufacturers"].Contains((string)manufacturer)"/>
                <div class="filter-option-label">@manufacturer</div>
            </div>
        }
        <label class="filter-category-name">CONNECTION TYPE</label>
        @foreach (var connectionType in ViewBag.ConnectionTypes)
        {
            <div class="filter-option-group">
                <input type="checkbox" value="@connectionType" name="connectionTypes" checked="@Context.Request.Query["connectionTypeIds"].Contains((string)connectionType)"/>
                <div class="filter-option-label">@connectionType</div>
            </div>
        }
        <label class="filter-category-name">BACKLIGHT</label>
        @foreach (var backlight in ViewBag.Backlights)
        {
            <div class="filter-option-group">
                <input type="checkbox" value="@backlight" name="backlights" checked="@Context.Request.Query["backlights"].Contains((string)backlight)"/>
                <div class="filter-option-label">@backlight</div>
            </div>
        }
        <label class="filter-category-name">WEIGHT</label>
        <div class="filter-option-group">
            <div class="filter-option-label">Min. (g) </div>
            <input type="number" step="1" name="minWeight" min="0" max="1000" class="filter-option-price-input" value="@Context.Request.Query["minWeight"]"/>
        </div>
        <div class="filter-option-group">
            <div class="filter-option-label">Max. (g)</div>
            <input type="number" step="1" name="maxWeight" min="0" max="1000" class="filter-option-price-input" value="@Context.Request.Query["maxWeight"]"/>
        </div>

        <label class="filter-category-name">PRICE</label>
        <div class="filter-option-group">
            <div class="filter-option-label">Min. </div>
            <input type="number" step="0.01" name="minPrice" min="0" max="1000" class="filter-option-price-input" value="@Context.Request.Query["minPrice"]"/>
        </div>
        <div class="filter-option-group">
            <div class="filter-option-label">Max.</div>
            <input type="number" step="0.01" name="maxPrice" min="0" max="1000" class="filter-option-price-input" value="@Context.Request.Query["maxPrice"]"/>
        </div>

        <input type="submit" value="APPLY" class="filter-submit"/>
    </form>
    <button class="filter-button" onclick="toggleFilter()">
        FILTER
    </button>
</aside>
<div class="goods-title">MOUSES</div>
<div class="goods-container">
    @foreach (var mouse in Model)
    {
        @await Html.PartialAsync("_Mouse", mouse)
    }
</div>
<script>
    function toggleFilter() {
        let sidebar = document.getElementById("filter-sidebar");
        if (sidebar.style.left === "0px")
            sidebar.style.left = "-180px";
        else
            sidebar.style.left = "0px";
    }
    
    let myForm = document.getElementById('filter-form');
        myForm.addEventListener('submit', function () {
            let allInputs = myForm.getElementsByTagName('input');
            for (let i = 0; i < allInputs.length; i++) {
                let input = allInputs[i];
                if (input.name && !input.value) {
                    input.name = '';
                }
            }
        });
</script>